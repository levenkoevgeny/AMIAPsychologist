# Generated by Django 2.2.7 on 2020-12-21 11:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AfterGraduating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('after_graduating', models.CharField(max_length=255, verbose_name='Действия после окончания Академии')),
            ],
            options={
                'verbose_name': 'Действие после окончания',
                'verbose_name_plural': 'Действия после окончания',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CharacterChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', models.CharField(max_length=255, verbose_name='Изменение')),
            ],
            options={
                'verbose_name': 'Изменение характера',
                'verbose_name_plural': 'Изменение характера',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Expectations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expectation', models.CharField(max_length=255, verbose_name='Ожидание')),
            ],
            options={
                'verbose_name': 'Оправдание ожиданий',
                'verbose_name_plural': 'Оправдание ожиданий',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guardian', models.CharField(max_length=255, verbose_name='Опекун')),
            ],
            options={
                'verbose_name': 'Опекун',
                'verbose_name_plural': 'Опекуны',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(max_length=100, verbose_name='Специальное звание')),
            ],
            options={
                'verbose_name': 'Специальное звание',
                'verbose_name_plural': 'Специальные звания',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SatisfiedWithTheTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satisfied', models.CharField(max_length=255, verbose_name='Удотволерены ли Вы как прошло обучение')),
            ],
            options={
                'verbose_name': 'Удовлетворение обучением',
                'verbose_name_plural': 'Удовлетворение обучением',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GraduateForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=100, verbose_name='Группа')),
                ('fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('marital_status', models.IntegerField(verbose_name='Семейное положение')),
                ('married_from', models.IntegerField(blank=True, null=True, verbose_name='Женат/замужем с - ')),
                ('has_children', models.IntegerField(default=0, verbose_name='Имеются ли дети')),
                ('children_data', models.CharField(blank=True, max_length=255, null=True, verbose_name='Пол и год рождения ребенка')),
                ('parents_data', models.IntegerField(verbose_name='Сведения о родителях')),
                ('divorced_from', models.IntegerField(blank=True, null=True, verbose_name='В разводе с')),
                ('divorced_live', models.IntegerField(blank=True, default=1, null=True, verbose_name='В разводе - живут')),
                ('mother_only_father_died_in', models.IntegerField(blank=True, null=True, verbose_name='Отец умер(погиб) в')),
                ('mother_only_father_died_other', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отец умер(погиб) иное')),
                ('father_only_mother_died_in', models.IntegerField(blank=True, null=True, verbose_name='Мать умерла(погибла) в')),
                ('father_only_mother_died_other', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мать умерла(погибла) иное')),
                ('stepfather_stepmother_marriage_mother', models.IntegerField(blank=True, default=1, null=True, verbose_name='Проживает с отчимом/мачехой совместно/раздельно')),
                ('stepfather_stepmother_marriage_father', models.IntegerField(blank=True, default=1, null=True, verbose_name='Проживает с отчимом/мачехой совместно/раздельно')),
                ('mother_father_data', models.IntegerField(blank=True, default=1, null=True, verbose_name='Сведениями о родителях распологаю/не распологаю')),
                ('guardians_other', models.CharField(blank=True, max_length=255, null=True, verbose_name='Опекуны (иное)')),
                ('father_stepfather', models.TextField(verbose_name='Отец, отчим (данные)')),
                ('mother_stepmother', models.TextField(verbose_name='Мать, мачеха (данные)')),
                ('siblings', models.TextField(verbose_name='Братья (данные)')),
                ('sport_kind', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вид спорта')),
                ('sport_level', models.IntegerField(blank=True, default=1, null=True, verbose_name='Спортивный уровень')),
                ('sport_period', models.IntegerField(blank=True, null=True, verbose_name='Периодичность занятий спортом')),
                ('sport_achievements', models.TextField(blank=True, null=True, verbose_name='Спортивные достижения')),
                ('sport_is_only_by_program', models.BooleanField(verbose_name='Занимался спортом только по учебноей программе')),
                ('interest', models.TextField(verbose_name='Увлечения на данный момент')),
                ('traits_formed', models.TextField(verbose_name='Какие качества сформировались')),
                ('what_taught', models.TextField(verbose_name='Чему научили офицеры, преподаватели')),
                ('would_advise', models.IntegerField(default=1, verbose_name='Посоветовали бы поступать в Академию')),
                ('need_conversation', models.IntegerField(default=1, verbose_name='Необходимость беседы с психологом')),
                ('need_conversation_theme', models.TextField(blank=True, null=True, verbose_name='Что обсудить с психологом')),
                ('fill_date_time', models.DateTimeField(auto_now=True, verbose_name='Дата заполнения')),
                ('after_graduating', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='graduate.AfterGraduating', verbose_name='Действия после окончания Академии')),
                ('character_change', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='graduate.CharacterChange', verbose_name='Как изменился характер')),
                ('expectations', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='graduate.Expectations', verbose_name='Оправдались ожидания')),
                ('guardians', models.ManyToManyField(blank=True, to='graduate.Guardian', verbose_name='Опекуны')),
                ('is_satisfied_with_the_training', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='graduate.SatisfiedWithTheTraining', verbose_name='Удовлетворен обучением')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='graduate.Position', verbose_name='Должность')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='graduate.Rank', verbose_name='Специальное звание')),
            ],
            options={
                'verbose_name': 'Анкета выпускника',
                'verbose_name_plural': 'Анкеты выпускников',
                'ordering': ('id',),
            },
        ),
    ]
